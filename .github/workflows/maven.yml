name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do código
        uses: actions/checkout@v3
      - name: Configurar JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'
      - name: Upload do relatório de testes
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-reports
          path: target/surefire-reports
  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Instalar Maven e JDK
        run: |
          sudo apt-get update
          sudo apt-get install -y maven openjdk-17-jdk

      - name: Compilar e empacotar
        run: |
          cd projeto
          mvn package -DskipTests

      - name: Upload artefato da build
        uses: actions/upload-artifact@v4
        with:
          name: java-package
          path: projeto/target/*.jar
  log_monitor:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Criar diretório de logs
        run: mkdir logs

      - name: Gerar logs em tempo real
        run: |
          echo "Iniciando monitoramento de logs..."
          echo "Horário: $(date)" >> logs/pipeline.log
          echo "Pipeline em execução no repositório: ${{ github.repository }}" >> logs/pipeline.log
          for i in {1..5}; do
            echo "📜 Log #$i - $(date)" >> logs/pipeline.log
            sleep 10
          done
          echo "Execução de logs concluída!" >> logs/pipeline.log

      - name: Upload dos logs
        uses: actions/upload-artifact@v4
        with:
          name: pipeline-logs
          path: logs/pipeline.log

  notify:
    runs-on: ubuntu-latest
    needs: [test, build, log_monitor]
    steps:
      - name: Gerar resumo da execução
        id: summary
        run: |
          echo "✅ Pipeline finalizada com sucesso!" > summary.txt
          echo "Repositório: ${{ github.repository }}" >> summary.txt
          echo "Commit: ${{ github.sha }}" >> summary.txt
          echo "Autor: ${{ github.actor }}" >> summary.txt
          echo "Branch: ${{ github.ref_name }}" >> summary.txt
          echo "Data: $(date)" >> summary.txt

      - name: Upload resumo
        uses: actions/upload-artifact@v4
        with:
          name: pipeline-summary
          path: summary.txt

      - name: Enviar e-mail de notificação
        uses: dawidd6/action-send-mail@v4
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.EMAIL_USER }}
          password: ${{ secrets.EMAIL_PASS }}
          subject: "🚀 CI/CD - Pipeline finalizada com sucesso ✅"
          to: "venompedropereira@hotmail.com"
          from: "CI/CD Pipeline <${{ secrets.EMAIL_USER }}>"
          body: |
            Olá!
            
            A pipeline do repositório **${{ github.repository }}** foi concluída com sucesso.
            
            🧩 Commit: ${{ github.sha }}
            🧑‍💻 Autor: ${{ github.actor }}
            🌿 Branch: ${{ github.ref_name }}
            📅 Data: $(date)
            
            Você pode baixar o resumo completo nos artefatos do GitHub Actions.

